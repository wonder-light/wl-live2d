# 构建 VitePress 站点并将其部署到 GitHub Pages 的工作流程
name: deploy-docs

on:
  # 通过推送或拉取主分支(main)事件触发工作流
  push:
    branches:
      - main
    paths:
      - 'docs/**'

  # 这将启用“操作”选项卡上的“运行工作流”按钮
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，允许部署到 GitHub 页面
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过正在运行和最新队列之间的运行队列,
# 但是, 不要取消正在进行的 action, 因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      # - uses: pnpm/action-setup@v3 # 如果使用 pnpm，请取消此区域注释
      #   with:
      #     version: 9
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm # 或 pnpm / yarn
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: npm ci # 或 pnpm install / yarn install / bun install
      - name: Build with VitePress
        run: npm run docs:build # 或 pnpm docs:build / yarn docs:build / bun run docs:build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # 部署作业，因为我们只是在部署
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    # 指定了操作系统为‘ubuntu-latest’
    runs-on: ubuntu-latest
    name: Deploy
    # Steps 代表一系列任务作为作业的一部分而被执行
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
